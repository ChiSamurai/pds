@use "styleguide" as pds;
@use "toggle-base" as *;
@use "util";

pds-toggle-box {
  $toggle-knob-spacing: $toggle-border-width / 2;
  $toggle-knob-size: $toggle-size - ($toggle-knob-spacing * 2);

  @include pds-toggle-base;

  .toggle-indicator {
    @include pds.rounding($toggle-size);

    width: ($toggle-knob-size + $toggle-knob-spacing) * 2;
    background-color: var(--input-border-color, var(--background-darker));
    align-items: center;
    display: flex;

    .toggle-knob {
      position: relative;
      border-radius: inherit;
      background-color: var(--page);
      transition: 100ms ease-out;
      height: $toggle-knob-size - 2px;
      width: $toggle-knob-size - 2px;
    }
  }

  &.checked {
    .toggle-indicator {
      background-color: var(--primary);
      border-color: var(--primary);

      .toggle-knob {
        transform: translateX($toggle-knob-size);
      }
    }
  }

  @include util.hover-state {
    .toggle-indicator {
      @include pds.input-hover;

      background-color: var(--primary-lighter);
    }
  }
  @include util.focus-state {
    .toggle-indicator {
      @include pds.input-focus;

      background-color: var(--focus);
      box-shadow: none;
    }
  }
  @include util.active-state {
    .toggle-indicator {
      @include pds.input-active;

      background-color: var(--primary);

      .toggle-knob {
        transform: translateX($toggle-knob-size * 0.33);
      }
    }

    &.checked {
      .toggle-indicator .toggle-knob {
        transform: translateX($toggle-knob-size * 0.66);
      }
    }
  }
}
