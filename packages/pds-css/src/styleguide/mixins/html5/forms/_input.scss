@use "styleguide/spacings" as *;
@use "styleguide/roundings" as *;
@use "util";

@use "../../rounding" as *;
@use "../../spacing" as *;

$input-padding-x: var(--space-3) !default;
$input-padding-y: var(--space-2) !default;

$input-background-color: var(--gray-light) !default;
$input-border: 1px solid $input-background-color !default;
$input-placeholder: var(--gray-dark) !default;

@mixin input {
  select,
  textarea,
  input:not([type="checkbox"]):not([type="radio"]) {
    @include input-base;

    caret-color: var(--primary-light);

    @include util.hover-state {
      @include input-hover;
    }
    @include util.read-only-state {
      @include input-read-only;
    }
    @include util.focus-state {
      @include input-focus;
    }

    @include util.disabled-state {
      @include input-disabled;
    }

    &:invalid {
      @include input-error;
    }
    &::placeholder {
      color: $input-placeholder;
      user-select: none;
    }

    @content;
  }

  select,
  input:not([type="checkbox"]):not([type="radio"]) {
    height: var(--input-height);
  }
  textarea {
    min-height: var(--input-height);
  }
}

@mixin input-base($spacing: true) {
  @include rounding($rounding-sm);
  @if $spacing {
    @include inner-spacing($input-padding-x, x);
    @include inner-spacing($input-padding-y, y);
  }

  appearance: none;
  box-sizing: border-box;
  transition: 100ms ease-out;
  background-color: $input-background-color;
  color: var(--foreground);
  border: $input-border;
}

@mixin input-hover {
  border-color: var(--gray);
}
@mixin input-focus {
  box-shadow: 0 0 0 1px var(--primary-light);
  border-color: var(--primary-light);
  background: var(--background);
}

@mixin input-read-only {
  border-color: var(--gray-lighter);
  background-color: var(--gray-lighter);
}
@mixin input-disabled {
  @include input-read-only;

  color: var(--disabled);
  pointer-events: none;
}

@mixin input-error {
  color: var(--bad);
  box-shadow: 0 0 0 1px var(--bad);
  border-color: var(--bad);
}
